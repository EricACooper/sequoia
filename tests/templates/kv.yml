- 
  name: pillowfight_small
  actions:
    -
      image: sequoiatools/pillowfight
      command: "-U  {{.Orchestrator}} -B 100 -t 1 -c 100"

-
  name: pillowfight_hi
  actions:
    -
      image: sequoiatools/pillowfight
      command: "-U  {{.Orchestrator}} -I {{.Scale 1000}} -B {{.Scale 100}} -t 4 -c 100"


-
  name: wait_for_dgm
  actions:
    -
      image: appropriate/curl
      command: "-s -u {{.RestUsername}}:{{.RestPassword}} {{.Orchestrator}}:8091/pools/default/buckets/$0/stats"
      repeat: -1
      # wait until active_item ratio (as $ratio) reaches value proved by arg $1 on bucket $0
      # this check saves current ratio into a variable as $ratio and then performs checking
      # checking is only initiated 'if .AllLogs' is returning stats
      until: "{{if .AllLogs `__self__`}}
                  {{with $sample:=(.TailLogs `__self__` 1 | json)}}
                    {{with $ratio:=ftoint (last $sample.op.samples.vb_active_resident_items_ratio)}}
                       {{lt $ratio $1}}
                    {{else}}{{false}}{{end}}
                  {{else}}{{false}}{{end}}
              {{else}}{{false}}{{end}}"
      wait: true

-
  name: wait_for_items
  actions:
    -
      image: appropriate/curl
      command: "-s -u {{.RestUsername}}:{{.RestPassword}} {{.Orchestrator}}:8091/pools/default/buckets/$0/stats"
      repeat: -1
      # wait until active_item ratio (as $ratio) reaches value proved by arg $1 on bucket $0
      # this check saves current ratio into a variable as $ratio and then performs checking
      # checking is only initiated 'if .AllLogs' is returning stats
      until: "{{if .AllLogs `__self__`}}
                  {{with $sample:=(.TailLogs `__self__` 1 | json)}}
                    {{with $val:=ftoint (last $sample.op.samples.curr_items)}}
                       {{lt $1 $val}}
                    {{else}}{{false}}{{end}}
                  {{else}}{{false}}{{end}}
              {{else}}{{false}}{{end}}"
      wait: true
